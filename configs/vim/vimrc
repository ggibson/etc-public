set tabstop=4
set expandtab
set shiftwidth=4
set number

colorscheme industry
"so ~/tmp/vim-themes/simple-dark.vim

" h8 the bright line numbering
highlight LineNr term=bold cterm=NONE ctermfg=DarkGrey ctermbg=NONE gui=NONE guifg=DarkGrey guibg=NONE

highlight Folded ctermbg=black ctermfg=DarkGrey

set path=.,,**

let mapleader = " "

map <Tab> :bn<cr>
map <S-Tab> :bp<cr>

map <Leader><Tab> :tabnext<cr>
map <Leader>b :Lexplore<cr>

nmap <C-p> :find 

" wildcard ignore
set wildignore+=*.swp,*.egg-info*,*.egg-link,*.pyc,*.pyo,*/eggs/*

" enable wildcard menu; e.g. when doing :vs **/*<thing to search for>
set wildmenu

" default netrw view to list 
let g:netrw_liststyle= 3
let g:netrw_altv=1


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" depends on exteral programs, but these are *very* useful
set makeprg=pylint\ %
if executable("rg")
  set grepprg=rg\ --vimgrep\ --smart-case\ --hidden
  set grepformat=%f:%l:%c:%m
endif

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" ctags stuff
set tags+=tags;/



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" fzf support without plugins
function! FZF() abort
    let l:tempname = tempname()
    " fzf | awk '{ print $1":1:0" }' > file
    execute 'silent !fzf --multi ' . '| awk ''{ print $1":1:0" }'' > ' . fnameescape(l:tempname)
    try
        execute 'cfile ' . l:tempname
        redraw!
    finally
        call delete(l:tempname)
    endtry
endfunction

" :Files
command! -nargs=* Files call FZF()
nnoremap <leader>ff :Files<cr>


function! RG(args) abort
    let l:tempname = tempname()
    let l:pattern = '.'
    if len(a:args) > 0
        let l:pattern = a:args
    endif
    " rg --vimgrep <pattern> | fzf -m > file
    execute 'silent !rg --vimgrep ''' . l:pattern . ''' | fzf -m > ' . fnameescape(l:tempname)
    try
        execute 'cfile ' . l:tempname
        redraw!
    finally
        call delete(l:tempname)
    endtry
endfunction

" :Rg [pattern]
command! -nargs=* Rg call RG(<q-args>)

" \fs
nnoremap <leader>fs :Rg<cr>

